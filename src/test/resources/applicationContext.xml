<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation= "http://www.springframework.org/schema/beans 
                            http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
                            http://www.springframework.org/schema/aop 
                            http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
                            http://www.springframework.org/schema/tx 
                            http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
                            http://www.springframework.org/schema/context
                            http://www.springframework.org/schema/context/spring-context-4.2.xsd    
                            ">
    
    <!-- 扫描注解所在的包 -->
    <context:component-scan base-package="com.jhhc.baseframework"/>
    
    <!-- 配置数据源及其他属性文件 -->
    <!--    <bean id="propertyConfigurer"
    class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
    p:location="jdbc_test.properties" />-->
          
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>jdbc_test.properties</value>
                <value>config.properties</value>
            </list>
        </property>
        <property name="fileEncoding">
            <value>UTF-8</value>
        </property>
    </bean>
    
    <bean id="dataSource"
          class="org.apache.commons.dbcp2.BasicDataSource"
          p:driverClassName="${driver}"
          p:url="${url}"
          p:username="${name}"
          p:password="${passwd}" /> 
    
    <bean id="jdbcTemplate"
          class="org.springframework.jdbc.core.JdbcTemplate" abstract="false"
          lazy-init="false" autowire="default">
        <property name="dataSource">
            <ref bean="dataSource" />
        </property>
    </bean>
    
    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource"/>
    <tx:annotation-driven /> 
    
    <!-- 配置aop -->
    <aop:aspectj-autoproxy/>
    
    <!-- 具体aop配置 -->
    <aop:config proxy-target-class="true">
        <aop:aspect ref="notify_advice">
            <aop:pointcut id="notify_pointcut" expression="within(${core_dir}..*) 
                and execution(@com.jhhc.baseframework.web.core.Notify * *(..))"/>
            <aop:after method="notifyChange" pointcut-ref="notify_pointcut"/>
        </aop:aspect>
        
        <aop:aspect ref="sret_wrap_advice" order="1">
            <aop:pointcut id="sret_wrap_pointcut" expression="within(${service_dir}..*) 
                and within(@org.springframework.stereotype.Service *) 
                and execution(public com.jhhc.baseframework.web.service.Sret *(..))"/>
            <aop:around method="wrapSret" pointcut-ref="sret_wrap_pointcut"/>
        </aop:aspect>
    </aop:config>
    
    <!-- mongodb配置 -->
    <import resource="mongodb-config.xml"/>
</beans>
